{{- $podNodeSelector := include "airflow.podNodeSelector" (dict "Release" .Release "Values" .Values "nodeSelector" .Values.apiServer.nodeSelector) }}
{{- $podTopologySpreadConstraints := include "airflow.podTopologySpreadConstraints" (dict "Release" .Release "Values" .Values "topologySpreadConstraints" .Values.apiServer.topologySpreadConstraints) }}
{{- $podAffinity := include "airflow.podAffinity" (dict "Release" .Release "Values" .Values "affinity" .Values.apiServer.affinity) }}
{{- $podTolerations := include "airflow.podTolerations" (dict "Release" .Release "Values" .Values "tolerations" .Values.apiServer.tolerations) }}
{{- $podSecurityContext := include "airflow.podSecurityContext" (dict "Release" .Release "Values" .Values "securityContext" .Values.apiServer.securityContext) }}
{{- $extraPipPackages := concat .Values.airflow.extraPipPackages .Values.apiServer.extraPipPackages }}
{{- $extraVolumeMounts := .Values.apiServer.extraVolumeMounts }}
{{- $volumeMounts := include "airflow.volumeMounts" (dict "Release" .Release "Values" .Values "extraPipPackages" $extraPipPackages "extraVolumeMounts" $extraVolumeMounts) }}
{{- $extraVolumes := .Values.apiServer.extraVolumes }}
{{- $volumes := include "airflow.volumes" (dict "Release" .Release "Values" .Values "extraPipPackages" $extraPipPackages "extraVolumes" $extraVolumes "extraVolumeMounts" $extraVolumeMounts) }}
{{- if semverCompare ">=3.0.0" (include "airflow.image.version" .) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "airflow.fullname" . }}-api-server
  {{- if .Values.apiServer.annotations }}
  annotations:
    {{- toYaml .Values.apiServer.annotations | nindent 4 }}
  {{- end }}
  labels:
    app: {{ include "airflow.labels.app" . }}
    component: api-server
    chart: {{ include "airflow.labels.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- if .Values.apiServer.labels }}
    {{- toYaml .Values.apiServer.labels | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.apiServer.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      ## multiple api-server pods can safely run concurrently
      maxSurge: 25%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ include "airflow.labels.app" . }}
      component: api-server
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/secret-config-envs: {{ include (print $.Template.BasePath "/config/secret-config-envs.yaml") . | sha256sum }}
        checksum/secret-local-settings: {{ include (print $.Template.BasePath "/config/secret-local-settings.yaml") . | sha256sum }}
        {{- if and (.Values.apiServer.webserverConfig.enabled) (not .Values.apiServer.webserverConfig.existingSecret) }}
        checksum/config-webserver-config: {{ include (print $.Template.BasePath "/config/secret-webserver-config.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.airflow.podAnnotations }}
        {{- toYaml .Values.airflow.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.apiServer.podAnnotations }}
        {{- toYaml .Values.apiServer.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.apiServer.safeToEvict }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{- end }}
      labels:
        app: {{ include "airflow.labels.app" . }}
        component: api-server
        release: {{ .Release.Name }}
        {{- if .Values.apiServer.podLabels }}
        {{- toYaml .Values.apiServer.podLabels | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: Always
      {{- if .Values.airflow.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.airflow.image.pullSecret }}
      {{- end }}
      {{- if $podNodeSelector }}
      nodeSelector:
        {{- $podNodeSelector | nindent 8 }}
      {{- end }}
      {{- if $podTopologySpreadConstraints }}
      topologySpreadConstraints:
        {{- $podTopologySpreadConstraints | nindent 8 }}
      {{- end }}
      {{- if $podAffinity }}
      affinity:
        {{- $podAffinity | nindent 8 }}
      {{- end }}
      {{- if $podTolerations }}
      tolerations:
        {{- $podTolerations | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "airflow.serviceAccountName" . }}
      {{- if $podSecurityContext }}
      securityContext:
        {{- $podSecurityContext | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if $extraPipPackages }}
        {{- include "airflow.init_container.install_pip_packages" (dict "Release" .Release "Values" .Values "extraPipPackages" $extraPipPackages) | indent 8 }}
        {{- end }}
        {{- if .Values.dags.gitSync.enabled }}
        {{- include "airflow.container.git_sync" (dict "Release" .Release "Values" .Values "sync_one_time" "true") | indent 8 }}
        {{- end }}
        {{- include "airflow.init_container.check_db" (dict "Release" .Release "Values" .Values "volumeMounts" $volumeMounts) | indent 8 }}
        {{- include "airflow.init_container.wait_for_db_migrations" (dict "Release" .Release "Values" .Values "volumeMounts" $volumeMounts) | indent 8 }}
        {{- if .Values.airflow.extraInitContainers }}
        {{- toYaml .Values.airflow.extraInitContainers | nindent 8 }}
        {{- end }}
        {{- if .Values.apiServer.extraInitContainers }}
        {{- toYaml .Values.apiServer.extraInitContainers | nindent 8 }}
        {{- end }}
      containers:
        - name: airflow-api-server
          {{- include "airflow.image" . | indent 10 }}
          resources:
            {{- toYaml .Values.apiServer.resources | nindent 12 }}
          ports:
            - name: api-server
              containerPort: 8080
              protocol: TCP
          envFrom:
            {{- include "airflow.envFrom" . | indent 12 }}
          env:
            {{- include "airflow.env" . | indent 12 }}
          command:
            {{- include "airflow.command" . | indent 12 }}
          args:
            - "bash"
            - "-c"
            - "exec airflow api-server"
          {{- if .Values.apiServer.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.apiServer.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.apiServer.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.apiServer.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.apiServer.livenessProbe.failureThreshold }}
            httpGet:
              scheme: {{ include "airflow.apiServer.scheme" . }}
              {{- $airflowUrl := .Values.airflow.config.AIRFLOW__API__BASE_URL | default "" | printf "%s/api/v2/monitor/health" | urlParse }}
              path: {{ get $airflowUrl "path" }}
              port: api-server
          {{- end }}
          {{- if .Values.apiServer.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.apiServer.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.apiServer.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.apiServer.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.apiServer.readinessProbe.failureThreshold }}
            httpGet:
              scheme: {{ include "airflow.apiServer.scheme" . }}
              {{- $airflowUrl := .Values.airflow.config.AIRFLOW__API__BASE_URL | default "" | printf "%s/api/v2/monitor/health" | urlParse }}
              path: {{ get $airflowUrl "path" }}
              port: api-server
          {{- end }}
          volumeMounts:
            {{- $volumeMounts | indent 12 }}
            {{- if .Values.apiServer.webserverConfig.enabled }}
            - name: webserver-config
              mountPath: /opt/airflow/webserver_config.py
              subPath: webserver_config.py
              readOnly: true
            {{- end }}
        {{- if .Values.dags.gitSync.enabled }}
        {{- include "airflow.container.git_sync" . | indent 8 }}
        {{- end }}
        {{- if .Values.airflow.extraContainers }}
        {{- toYaml .Values.airflow.extraContainers | nindent 8 }}
        {{- end }}
        {{- if .Values.apiServer.extraContainers }}
        {{- toYaml .Values.apiServer.extraContainers | nindent 8 }}
        {{- end }}
      volumes:
        {{- $volumes | indent 8 }}
        {{- if .Values.apiServer.webserverConfig.enabled }}
        - name: webserver-config
          secret:
            {{- if .Values.apiServer.webserverConfig.existingSecret }}
            secretName: {{ .Values.apiServer.webserverConfig.existingSecret }}
            {{- else }}
            secretName: {{ include "airflow.fullname" . }}-webserver-config
            {{- end }}
            defaultMode: 0644
        {{- end }}
{{- end }}
